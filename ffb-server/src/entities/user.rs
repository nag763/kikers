//! SeaORM Entity. Generated by sea-orm-codegen 0.7.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "USER")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    #[sea_orm(unique)]
    pub login: String,
    pub password: String,
    pub is_authorized: i8,
    pub role: i32,
    pub joined_on: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::role::Entity",
        from = "Column::Role",
        to = "super::role::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Role,
    #[sea_orm(has_many = "super::user_league::Entity")]
    UserLeague,
}

impl Related<super::role::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Role.def()
    }
}

impl Related<super::user_league::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserLeague.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
