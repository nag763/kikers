//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use super::sea_orm_active_enums::Result;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "GAME")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub stadium_id: Option<i32>,
    pub home_team_id: i32,
    pub home_team_odds: Option<f32>,
    pub home_team_score: Option<i32>,
    pub away_team_id: i32,
    pub away_team_odds: Option<f32>,
    pub away_team_score: Option<i32>,
    pub draw_odds: Option<f32>,
    pub edition_id: i32,
    pub played_on: Option<DateTimeUtc>,
    pub result: Option<Result>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::club::Entity",
        from = "Column::HomeTeamId",
        to = "super::club::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Club2,
    #[sea_orm(
        belongs_to = "super::club::Entity",
        from = "Column::AwayTeamId",
        to = "super::club::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Club1,
    #[sea_orm(
        belongs_to = "super::edition::Entity",
        from = "Column::EditionId",
        to = "super::edition::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Edition,
    #[sea_orm(
        belongs_to = "super::stadium::Entity",
        from = "Column::StadiumId",
        to = "super::stadium::Column::Id",
        on_update = "SetNull",
        on_delete = "SetNull"
    )]
    Stadium,
}

impl Related<super::edition::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Edition.def()
    }
}

impl Related<super::stadium::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Stadium.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
