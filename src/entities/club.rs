//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "CLUB")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub short: String,
    pub home_stadium_id: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::stadium::Entity",
        from = "Column::HomeStadiumId",
        to = "super::stadium::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    Stadium,
    #[sea_orm(has_many = "super::edition::Entity")]
    Edition,
    #[sea_orm(has_many = "super::federation_club::Entity")]
    FederationClub,
}

impl Related<super::stadium::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Stadium.def()
    }
}

impl Related<super::edition::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Edition.def()
    }
}

impl Related<super::federation_club::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FederationClub.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
